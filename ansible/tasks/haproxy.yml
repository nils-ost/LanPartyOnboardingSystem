---
- name: pull haproxy docker images
  docker_image:
    name: '{{ item }}'
    source: pull
  loop:
    - '{{ alpine_image }}'
    - '{{ haproxy_image }}'

- name: ask lpos for it's port
  ansible.builtin.command: lpos --port
  ignore_errors: true
  changed_when: false
  failed_when: false
  register: lpos_port

- name: can't proceed message
  ansible.builtin.debug:
    msg: can't proceed with haproxy setup, as LPOS seems not to be running
  changed_when: true
  when: lpos_port.rc != 0

- name: copy haproxy service file
  template:
    src: templates/haproxy.service.j2
    dest: '/etc/systemd/system/{{ haproxy_service_name }}'
    owner: root
    group: root
    mode: '0644'
  register: haproxy_service_file
  when: lpos_port.rc == 0

- name: force systemd to reread configs
  ansible.builtin.systemd_service:
    daemon_reload: true
  when: haproxy_service_file.changed

- name: create haproxy config direcory
  ansible.builtin.file:
    path: '{{ haproxy_config_dir }}'
    state: directory
    owner: root
    group: root
    mode: '0755'
  when: lpos_port.rc == 0

- name: copy haproxy config
  template:
    src: templates/haproxy.cfg.j2
    dest: "{{ [haproxy_config_dir, 'haproxy.cfg'] | path_join }}"
    owner: root
    group: root
    mode: '0644'
  register: haproxy_config
  when: lpos_port.rc == 0

- name: restart haproxy service
  ansible.builtin.systemd_service:
    name: '{{ haproxy_service_name }}'
    state: restarted
  ignore_errors: true
  when: haproxy_config.changed or haproxy_service_file.changed

- name: ensure haproxy service is started and enabled
  ansible.builtin.systemd_service:
    name: '{{ haproxy_service_name }}'
    state: started
    enabled: true
  when: lpos_port.rc == 0
