---
- name: pull docker images for monitoring
  docker_image:
    name: '{{ item }}'
    source: pull
  loop:
    - '{{ docker_exporter_image }}'
    - '{{ mongodb_exporter_image }}'

- name: install prometheus-node-exporter
  apt:
    name:
      - prometheus-node-exporter
    state: present

- name: enable LPOS monitoring endpoint
  ansible.builtin.command: lpos --enablemetrics
  ignore_errors: true
  register: lpos_endpoint
  changed_when: lpos_endpoint.rc == 1

- name: copy docker-exporter service file
  template:
    src: templates/docker-exporter.service.j2
    dest: '/etc/systemd/system/{{ docker_exporter_service_name }}'
    owner: root
    group: root
    mode: '0644'
  register: docker_exporter_service_file

- name: copy mongodb-exporter service file
  template:
    src: templates/mongodb-exporter.service.j2
    dest: '/etc/systemd/system/{{ mongodb_exporter_service_name }}'
    owner: root
    group: root
    mode: '0644'
  register: mongodb_exporter_service_file

- name: force systemd to reread configs
  ansible.builtin.systemd_service:
    daemon_reload: true
  when: docker_exporter_service_file.changed or mongodb_exporter_service_file.changed

- name: restart docker-exporter service
  ansible.builtin.systemd_service:
    name: '{{ docker_exporter_service_name }}'
    state: restarted
  when: docker_exporter_service_file.changed

- name: restart mongodb-exporter service
  ansible.builtin.systemd_service:
    name: '{{ mongodb_exporter_service_name }}'
    state: restarted
  when: mongodb_exporter_service_file.changed

- name: ensure exporter services are started and enabled
  ansible.builtin.systemd_service:
    name: '{{ item }}'
    state: started
    enabled: true
  loop:
    - '{{ docker_exporter_service_name }}'
    - '{{ mongodb_exporter_service_name }}'
